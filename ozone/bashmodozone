
#!/bin/bash
# inspired by https://github.com/pmarkham/writing-ansible-modules-in-bash.git
function create_bucket
    {
    echo  $(aws s3api --endpoint $s3groute list-buckets) > buckets.json
    #cat buckets.json
    #{ "Buckets": [ { "Name": "openshiftozonebucket", "CreationDate": "2020-10-11T05:09:01.397000+00:00" } ] }
    #echo $bucket
    #echo $s3groute
    isBucketPresent=$(jq -r --arg bucket "$bucket" '.Buckets[] | select(.Name == $bucket)' buckets.json)
    if [ ! -z "${isBucketPresent}" ] 
    then
        changed="false"
        msg="bucket already exists"
    else
    # code if not found
        aws s3api --endpoint $s3groute create-bucket --bucket=$bucket
        changed="true"
        msg="bucket created"
    
    fi
    contents="done"  
    #contents=$(aws s3api --endpoint $s3groute list-buckets | python -c 'import json,sys; print(json.dumps(sys.stdin.read()))')
    }


source $1

if [ -z "$s3groute" ]; then
    printf '{"failed": true, "msg": "missing required arguments: s3groute"}'
    exit 1
fi
if [ -z "$bucket" ]; then
    printf '{"failed": true, "msg": "missing required arguments: bucket"}'
    exit 1
fi

changed="false"
msg=""
contents="done"

case $state in
    present)
        create_bucket
        ;;
    absent)
        delete_bucket
        ;;
    upper)
        convert_to_upper
        ;;
    lower)
        convert_to_lower
        ;;
    *)
        printf '{"failed": true, "msg": "invalid state: %s"}' "$state"
        exit 1
        ;;
esac

printf '{"changed": %s, "msg": "%s", "contents": %s}' "$changed" "$msg" "$contents"
#echo  $changed $msg $contents
exit 0
